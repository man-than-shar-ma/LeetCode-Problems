/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        unordered_map<int,int> umap;
        queue<TreeNode*> que;
        que.push(root);
        while(!que.empty()){
            if(umap[k - que.front()->val] > 0)
                return true;
            umap[que.front()->val]++;
            if(que.front()->left != NULL)
                que.push(que.front()->left);
            if(que.front()->right != NULL)
                que.push(que.front()->right);
            que.pop();
        }
        return false;
    }
};