/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        vector<vector<int>> result;
        if(root == NULL)
            return result.size();
        queue<TreeNode*> que;
        que.push(root);
        while(!que.empty()){
            vector<int> temp;
            int queSize = que.size();
            for(int i=0;i<queSize;i++){
                temp.push_back(que.front()->val);
                if(que.front()->left != NULL)
                    que.push(que.front()->left);
                if(que.front()->right != NULL)
                    que.push(que.front()->right);
                que.pop();
            }
            result.push_back(temp);
        }
        return result.size();
    }
};