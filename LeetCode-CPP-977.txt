class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {

        // for(int i = 0;i<nums.size();i++){
        //     nums[i] *= nums[i];
        // }
        // sort(nums.begin(),nums.end());
        // return nums;

        int pivot = nums.size()-1;
        for(int i=0; i<nums.size()-1; i++){
            if(abs(nums[i]) < abs(nums[i+1])){
                pivot = i;
                break;
            }
        }
        
        vector<int> result;
        result.push_back(nums[pivot]*nums[pivot]);
        int lptr = pivot - 1;
        int rptr = pivot + 1;
        while(lptr>=0 && rptr < nums.size()){
            if(abs(nums[lptr]) <= abs(nums[rptr])){
                result.push_back(nums[lptr]*nums[lptr]);
                lptr -= 1;
            }
            else{
                result.push_back(nums[rptr]*nums[rptr]);
                rptr += 1;
            }
        }
        while(lptr >= 0){
            result.push_back(nums[lptr]*nums[lptr]);
            lptr -= 1;
        }
        while(rptr < nums.size()){
            result.push_back(nums[rptr]*nums[rptr]);
            rptr += 1;
        }
        return result;
    }
};