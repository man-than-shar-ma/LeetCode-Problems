class Solution {
public:
    bool compareMaps(unordered_map<char,int> s1map, unordered_map<char,int> s2map){
        for(auto i : s1map){
            if(s2map[i.first] != i.second) return false;
        }
        return true;
    }
    bool checkInclusion(string s1, string s2) {
        if(s1.size() > s2.size()) return false;
        
        unordered_map<char,int> s1map;
        for(char i : s1) s1map[i]++;
        unordered_map<char, int> s2map;
        int start = 0;
        int end = 0;
        while(end < s2.size()){
            if(end - start < s1.size()) s2map[s2[end++]]++;
            else s2map[s2[start++]]--;
            if(end - start == s1.size() && compareMaps(s1map,s2map)) return true;
        }
        return false;
    }
};