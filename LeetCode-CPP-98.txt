/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        stack<TreeNode*> st;
        TreeNode* temp;
        long long prevVal = LLONG_MIN;
        if(root!=NULL){
            st.push(root->right);
            root->right = NULL;
            st.push(root);
            st.push(root->left);
            root->left =NULL;
            
            while(!st.empty()){
                if(st.top()==NULL){
                    st.pop();
                }
                else if(st.top()->left == NULL && st.top()->right == NULL){
                    if(prevVal < st.top()->val){
                        prevVal = st.top()->val;
                        st.pop();
                    }
                    else
                        return false;
                }
                else{
                    temp = st.top();
                    st.pop();
                    st.push(temp->right);
                    temp->right = NULL;
                    st.push(temp);
                    st.push(temp->left);
                    temp->left = NULL;
                }
            }
        }
        return true;
    }
};